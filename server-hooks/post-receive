#!/bin/bash

# Git Post-Receive Hook for cPanel Deployment
# Automatically deploys Tamil Status Creator when pushing to cpanel branch

REPO_DIR="/home/statusdreamcoder/repo.git"
LIVE_DIR="/home/statusdreamcoder/live"
BACKUP_DIR="/home/statusdreamcoder/backups"
BRANCH="cpanel"

echo "üöÄ Starting deployment process..."

# Check if the push is for the cpanel branch
while read oldrev newrev refname; do
    branch=$(git rev-parse --symbolic --abbrev-ref $refname)
    if [ "$branch" = "$BRANCH" ]; then
        echo "üì• Received push to $BRANCH branch"
        
        # Create backup of current live version
        if [ -d "$LIVE_DIR" ]; then
            echo "üíæ Creating backup..."
            tar -czf "$BACKUP_DIR/backup-$(date +%Y%m%d-%H%M%S).tar.gz" -C "$LIVE_DIR" .
            
            # Keep only last 5 backups
            cd "$BACKUP_DIR"
            ls -t backup-*.tar.gz | tail -n +6 | xargs -r rm --
        fi
        
        # Deploy new version
        echo "üìÇ Checking out files to live directory..."
        git --git-dir=$REPO_DIR --work-tree=$LIVE_DIR checkout -f $BRANCH
        
        # Enter live directory and run deployment
        cd "$LIVE_DIR"
        
        # Check if backend directory exists
        if [ -d "backend" ]; then
            cd backend
            
            echo "üîß Running deployment script..."
            if [ -f "deploy.sh" ]; then
                chmod +x deploy.sh
                ./deploy.sh
            else
                echo "‚ö†Ô∏è  deploy.sh not found, running manual deployment..."
                
                # Manual deployment steps
                if command -v composer > /dev/null; then
                    composer install --optimize-autoloader --no-dev --no-interaction
                else
                    echo "Using local composer..."
                    php ~/composer.phar install --optimize-autoloader --no-dev --no-interaction
                fi
                
                # Laravel optimization
                php artisan config:cache
                php artisan route:cache  
                php artisan view:cache
                
                # Database migration (with safety)
                php artisan migrate --force --no-interaction
                
                # Storage link
                php artisan storage:link
                
                # Set proper permissions for cPanel
                find . -type f -exec chmod 644 {} \;
                find . -type d -exec chmod 755 {} \;
                chmod -R 775 storage bootstrap/cache
            fi
            
            echo "‚úÖ Deployment completed successfully!"
            echo "üåê Live at: https://status.dreamcoderz.com"
        else
            echo "‚ùå Backend directory not found!"
            exit 1
        fi
    else
        echo "‚è≠Ô∏è  Ignoring push to $branch branch (only deploying $BRANCH)"
    fi
done